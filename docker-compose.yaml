volumes:
  mongo_volume:
  postgres_volume:
  backend_build_volume:
  frontend_build_volume:

services:
  backend_build:
    build: backend/
    volumes:
      - backend_build_volume:/usr/app/backend/build/libs/
    depends_on:
      - postgres
      - mongo
    networks:
      - default_network

  frontend_build:
    build: frontend/
    volumes:
      - frontend_build_volume:/usr/app/frontend/public/
    environment:
      - SERVER_URI=http://localhost:${SERVER_PORT}/backend
    networks:
      - default_network

  backend:
    image: tomcat:${TOMCAT_VERSION}
    volumes:
      - backend_build_volume:/usr/local/tomcat/webapps
    environment:
      - POSTGRES_DB_HOST=postgres
      - POSTGRES_DB_PORT=5432
      - MONGO_DB_HOST=mongo
      - MONGO_DB_PORT=27017
    depends_on:
      - postgres
      - mongo
      - backend_build
    ports:
      - ${SERVER_PORT}:8080
    networks:
      - default_network

  frontend:
    image: nginx:${NGINX_VERSION}
    volumes:
      - frontend_build_volume:/usr/share/nginx/html/
    depends_on:
      - frontend_build
      - backend
    ports:
      - ${CLIENT_PORT}:80
    networks:
      - default_network

  postgres:
    image: postgres:${POSTGRES_VERSION}
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=insurance_db
      - POSTGRES_USER=insurance_app
      - POSTGRES_PASSWORD=insurance_app
    networks:
      - default_network

  mongo:
    image: mongo:latest
    volumes:
      - mongo_volume:/data/db
      - "./backend/mongo:/data/init/"
    environment:
      - MONGO_INITDB_DATABASE=insurance_address_ref
      - MONGO_INITDB_ROOT_USERNAME=insurance_app
      - MONGO_INITDB_ROOT_PASSWORD=insurance_app
    networks:
      - default_network

  mongo_seed:
    build:
      context: backend/
      dockerfile: Dockerfile.mongoseed
    depends_on:
      - mongo
    networks:
      - default_network

networks:
  default_network:
    name: network
